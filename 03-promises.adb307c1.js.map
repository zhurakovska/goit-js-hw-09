{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEiBC,SAASC,cAAc,SAiC/BC,iBAAiB,UA/BDC,IACrBA,EAAMC,iBAEN,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAMM,OAAOC,SAE7C,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAOJ,EAAOK,OAAQF,IACzCG,EAAcH,EAAGC,OAAON,EAAMO,OAAQD,OAAOL,EAAKM,QACjDE,MAAK,EAACC,SAAEA,EAAQX,MAAEA,MACjBY,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAqBH,QAAiBX,MAAU,IAEzEe,OAAM,EAACJ,SAAEA,EAAQX,MAAEA,MAClBY,EAAAnB,GAASoB,OAAOG,QAAQ,sBAAoBL,QAAeX,MAAU,IAIzE,SAASS,EAAcE,EAAUX,EAAOE,GACtC,MAAMe,EAAgBC,KAAKC,SAAW,GAWtC,OATkB,IAAIC,SAAQ,CAACC,EAAKC,KAClCC,YAAW,KACLN,EACFI,EAAI,C,SAAEV,E,MAAUX,IAEhBsB,EAAI,C,SAAEX,E,MAAUX,GAAQ,GAEzBA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nfunction promiseGenerator() {\n  const formEl = document.querySelector('.form');\n\n  const onFormElSubmit = event => {\n    event.preventDefault();\n\n    const { delay, step, amount } = event.target.elements;\n\n    for (let i = 1; i <= Number(amount.value); i++) {\n      createPromise(i, Number(delay.value), Number(step.value))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }\n\n    function createPromise(position, delay, step) {\n      const shouldResolve = Math.random() > 0.3;\n\n      const myPromise = new Promise((res, rej) => {\n        setTimeout(() => {\n          if (shouldResolve) {\n            res({ position, delay });\n          } else {\n            rej({ position, delay });\n          }\n        }, delay);\n      });\n      return myPromise;\n    }\n  };\n\n  formEl.addEventListener('submit', onFormElSubmit);\n}\n\npromiseGenerator();"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","delay1","step","amount","target","elements","i","Number","value","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","shouldResolve","Math","random","Promise","res","rej","setTimeout"],"version":3,"file":"03-promises.adb307c1.js.map"}