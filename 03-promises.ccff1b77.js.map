{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEiBC,SAASC,cAAc,SAiC/BC,iBAAiB,UA/BD,SAAAC,GACrBA,EAAMC,iBAIN,IAFA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBI,MAAOC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OAEZC,EAAI,EAAGA,GAAKC,OAAOF,EAAOG,OAAQF,IACzCG,EAAcH,EAAGC,OAAOL,EAAMM,OAAQD,OAAOH,EAAKI,QACjDE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MACjBU,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANb,EAAM,M,IAEvEc,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MAClBU,EAAArB,GAASsB,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANb,EAAM,M,IAIvE,SAASM,EAAcG,EAAUT,EAAOC,GACtC,IAAMe,EAAgBC,KAAKC,SAAW,GAWtC,OATkB,IAAIC,SAAQ,SAACC,EAAKC,GAClCC,YAAW,WACLN,EACFI,EAAI,CAAEX,WAAUT,UAEhBqB,EAAI,CAAEZ,WAAUT,S,GAEjBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nfunction promiseGenerator() {\n  const formEl = document.querySelector('.form');\n\n  const onFormElSubmit = event => {\n    event.preventDefault();\n\n    const { delay, step, amount } = event.target.elements;\n\n    for (let i = 1; i <= Number(amount.value); i++) {\n      createPromise(i, Number(delay.value), Number(step.value))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }\n\n    function createPromise(position, delay, step) {\n      const shouldResolve = Math.random() > 0.3;\n\n      const myPromise = new Promise((res, rej) => {\n        setTimeout(() => {\n          if (shouldResolve) {\n            res({ position, delay });\n          } else {\n            rej({ position, delay });\n          }\n        }, delay);\n      });\n      return myPromise;\n    }\n  };\n\n  formEl.addEventListener('submit', onFormElSubmit);\n}\n\npromiseGenerator();"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay1","delay","step","amount","i","Number","value","createPromise","then","param","position","$parcel$interopDefault","Notify","success","concat","catch","failure","shouldResolve","Math","random","Promise","res","rej","setTimeout"],"version":3,"file":"03-promises.ccff1b77.js.map"}